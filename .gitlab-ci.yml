include:
  - project: 4cast1/ci-templates
    ref: f6678c6ec14f8a1657bbe478247db62967704e9f
    file: /python/default-lint.yml
  - project: 4cast1/ci-templates
    ref: f6678c6ec14f8a1657bbe478247db62967704e9f
    file: /python/templates.yml
  - project: 4cast1/ci-templates
    ref: f6678c6ec14f8a1657bbe478247db62967704e9f
    file: /docker/templates.yml

variables:
  POETRY_IMAGE_VERSION: 3.11-1.5.1-bullseye
  PY_SRC: src/a6
  PY_SKIP_NBSTRIPOUT: yes
  # Pin black version due to conflict with reorder-python-imports
  PY_BLACK_VERSION: 23.7.0
  PY_LINT_DIRS: src/a6 src/tests scripts mlflow
  PY_PYUPGRADE_ARGS: |
    --py3-plus
    --py36-plus
    --py37-plus
    --py38-plus
    --py39-plus
    --py310-plus
    --py311-plus
  PY_REORDER_PYTHON_IMPORTS_ARGS: |
    --application-directories=.:src
    --py311-plus
  DOCKER_FILE: docker/a6.Dockerfile
  DOCKER_IMAGE_NAME: a6
  DOCKER_ZIPPED_IMAGE_FILE: a6

stages:
 - lint
 - test
 - validate
 - build
 - integration

mypy:
  extends: .lint-mypy
  allow_failure: true

pylint:
  extends: .lint-pylint
  allow_failure: true

.install-dependencies:
  script:
    - apt update -y && apt upgrade -y
    # Install
    #   - gcc (build-essential), required by HDBSCAN.
    #   - libgeos and libgeos-dev, required by Cartopy.
    #   - python3-opencv, required by opencv
    - >
      apt install -y
      build-essential
      libgeos-3.9.0
      libgeos-dev
      python3-opencv

.test-base:
  extends: .test
  needs: []
  variables:
    PY_POETRY_INSTALL_ARGS: --only=main
  before_script:
    - export PYTHONPATH=$PYTHONPATH:src
    - !reference [.install-dependencies, script]
  script:
    - !reference [.include-functions-change-dir-set-py-root-env-var-upgrade-pip, script]
    - poetry run pip install pytest pytest-custom_exit_code pytest-cov
    - >
      export PY_PYTEST_ARGS="
        ${PY_PYTEST_ARGS}
        ${PY_PYTEST_DIR:-tests}
        --suppress-no-test-exit-code
        --junitxml=./report/pytest.xml
        --cov=$PY_SRC
        --cov-report term
        --cov-report html"
    - echo PY_PYTEST_ARGS=${PY_PYTEST_ARGS}
    - echo PY_POETRY_INSTALL_ARGS=${PY_POETRY_INSTALL_ARGS}
    - poetry install ${PY_POETRY_INSTALL_ARGS}
    - poetry run pip install -r requirements-cpu.txt
    - poetry run pytest ${PY_PYTEST_ARGS}
      # If coverage report should not be created, don't attempt
      # to move the coverage report file.
    - >
      if [ -z "${PY_PYTEST_NO_COVERAGE}" ]; then
        ls -al
        echo "Moving coverage report"
        mv .coverage .coverage.${CI_JOB_ID}
        ls -al;
      else
        echo "Omitting move of coverage report"
      fi

test-doc:
  extends: .test-base
  variables:
    PY_PYTEST_DIR: src/a6
    PY_PYTEST_ARGS: --doctest-modules

test-unit:
  extends: .test-base
  variables:
    PY_PYTEST_DIR: src/tests/unit

coverage:
  extends: .coverage
  needs:
    - job: test-doc
      artifacts: true
    - job: test-unit
      artifacts: true
