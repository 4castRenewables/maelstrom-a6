name: a6

docker_env:
  image: a6:latest
  volumes:
    - "${PWD}/../src/tests/data:/data"
    - "${PWD}:/mlproject"
  environment: ["MLFLOW_TRACKING_TOKEN"]

entry_points:
  test:
    command:
      python pca_and_kmeans.py
  cluster:
    parameters:
      weather_data:
        type: string
      filename_pattern:
        type: str
        default: "*.nc"
      slice_weather_data_files:
        type: bool
        default: False
      level:
        type: int
        default: None
      config:
        type: str
      use_varimax:
        type: bool
        default: False
      log_to_mantik:
        type: bool
        default: True
    command: >
      a6
        --log-to-mantik {log_to_mantik}
        train cluster
        --weather-data {weather_data}
        --filename-pattern {filename_pattern}
        --slice-weather-data-files {slice_weather_data_files}
        --level {level}
        --config {config}
        --use-varimax {use_varimax}
  temporal:
    parameters:
      weather_data:
        type: string
      filename_pattern:
        type: str
        default: "*.nc"
      slice_weather_data_files:
        type: bool
        default: False
      level:
        type: int
        default: None
      n_components:
        type: int
        default: 3
      min_cluster_size:
        type: int
        default: 2
      use_varimax:
        type: bool
        default: False
      log_to_mantik:
        type: bool
        default: True
    command: >
      a6
        --log-to-mantik {log_to_mantik}
        train temporal-study
        --weather-data {weather_data}
        --filename-pattern {filename_pattern}
        --slice-weather-data-files {slice_weather_data_files}
        --level {level}
        --n-components {n_components}
        --min-cluster-size {min_cluster_size}
        --use-varimax {use_varimax}
  grid-search:
    parameters:
      weather_data:
        type: string
      filename_pattern:
        type: str
        default: "*.nc"
      slice_weather_data_files:
        type: bool
        default: False
      level:
        type: int
        default: None
      turbine_data:
        type: str
      config:
        type: str
      log_to_mantik:
        type: bool
        default: True
    command: >
      a6
        --log-to-mantik {log_to_mantik}
        train grid-search
        --weather-data {weather_data}
        --filename-pattern {filename_pattern}
        --slice-weather-data-files {slice_weather_data_files}
        --level {level}
        --turbine-data {turbine_data}
        --config {config}
  dcv2:
    parameters:
      data_path:
        type: str
      dump_path:
        type: str
        default: ./dcv2_dump
      dist_url:
        type: str
        default: tcp://
      nbm_crops:
        type: list[int]
        default: 2
      size_crops:
        type: list[int]
        default: 128 96
      min_scale_crops:
       type: list[float]
       default: 0.14 0.05
      max_scale_crops
        type: list[float]
        default: 1. 0.14
      crops_for_assign:
        type: list[int]
        default: 0 1
      temperature:
        type: float
        default: 0.1
      feat_dim:
        type: int
        default: 128
      nmb_prototypes:
        type: list[int]
        default: 30 30 30
      epochs:
        type: int
        default: 1
      batch_size:
        type: int
        default: 64
      base_lr:
        type: float
        default: 4.8
      final_lr:
        type: float
        default: 0.0048
      freeze_prototypes_niters:
        type: int
        default: 300000
      wd:
        type: float
        default: 0.000001
      warmup_epochs:
        type: int
        default: 10
      start_warmup:
        type: float
        default: 0.3
      arch:
        type: str
        default: resnet50
      sync_bn:
        type: str
        default: apex
    command: >
      python train_dcv2.py
        --data_path {data_path}
        --nmb-crops {nmb_crops}
        --size_crops {size_crops}
        --min-scale-crops {min_scale_crops}
        --max-scale-crops {max_scale_crops}
        --crops-for-assign {crops_for_assign}
        --temperature {temperature}
        --feat-dim {feat_dim}
        --nmb-prototypes {nmb_prototypes}
        --epochs {epochs}
        --batch-size {batch_size}
        --base-lr {base_lr}
        --final-lr {final_lr}
        --freeze-prototypes-niters {freeze_prototypes_niters}
        --wd {wd}
        --warmup-epochs {warmup_epochs}
        --start-warmup {start_warmup}
        --dist-url {dist_url}
        --arch {arch}
        --sync-bn {sync_bn}
        --dump-path ${dump_path}
