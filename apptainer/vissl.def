Bootstrap: docker
From: debian:bullseye-slim
Stage: setup

%post
    export VISSL_VERSION=0.1.6

    # Install common dependencies
    # See https://stackoverflow.com/questions/44331836/apt-get-install-tzdata-noninteractive
    apt-get update
    DEBIAN_FRONTEND=noninteractive \
    apt-get install -y --no-install-recommends \
        ca-certificates \
        wget \
        git

    # Install conda
    wget --quiet https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
    chmod +x miniconda.sh
    bash miniconda.sh -b -p /opt/conda

    # Clone vissl repository
    git clone --recursive https://github.com/facebookresearch/vissl.git /opt/vissl
    cd /opt/vissl
    git checkout v${VISSL_VERSION}

# Always use cudnn version 7
Bootstrap: docker
From: nvidia/cuda:10.2-cudnn7-devel
Stage: build

%files from setup
    /opt/conda /opt/conda
    /opt/vissl /opt/vissl

%post
    export CUDA_VERSION=10.2
    export PYTHON_VERSION=3.8
    export PYTORCH_VERSION=1.8.1
    export TORCHVISION_VERSION=0.9.1
    export PATH="/usr/local/cuda-10.2/bin:/usr/local/bin:/opt/conda/bin${PATH}"

    . /opt/conda/etc/profile.d/conda.sh
    conda config --add channels conda-forge
    conda update pip setuptools

    # Create and activate conda environment
    conda create --name vissl python=${PYTHON_VERSION}
    conda activate vissl
    python --version

    # Install PyTorch
    conda install -c pytorch -c conda-forge \
        pytorch=${PYTORCH_VERSION} \
        torchvision=${TORCHVISION_VERSION} \
        cudatoolkit=${CUDA_VERSION}

    # Install apex and vissl
    conda install -c vissl -c iopath -c conda-forge -c pytorch -c defaults apex

    # Install VISSL
    cd /opt/vissl

    # Install vissl dependencies
    python -m pip install -r requirements.txt
    python -m pip install opencv-python

    # Update classy vision install to commit stable for vissl.
    # Note: If building from vissl main, use classyvision main.
    python -m pip uninstall -y classy_vision
    python -m pip install classy-vision@https://github.com/facebookresearch/ClassyVision/tarball/4785d5ee19d3bcedd5b28c1eb51ea1f59188b54d

    # Update fairscale install to commit stable for vissl.
    python -m pip uninstall -y fairscale
    python -m pip install fairscale==0.4.6

    # Install vissl dev mode (e stands for editable)
    python -m pip install -e "."

    # Update numpy to fix ModuleNotFoundError: No module named 'numpy.core._multiarray_umath'
    # See https://stackoverflow.com/a/74934626/16814206
    python -m pip install numpy==1.21.0

# Always use cudnn version 7
Bootstrap: docker
From: nvidia/cuda:10.2-cudnn7-devel
Stage: final

%files from setup
    /opt/vissl /opt/vissl

%files from build
    /opt/conda /opt/conda

%environment
    export PATH="/usr/local/cuda-10.2/bin:/usr/local/bin:/opt/conda/bin:/opt/conda/envs/vissl/bin:${PATH}"
    . /opt/conda/etc/profile.d/conda.sh

%post
    # See https://github.com/NVIDIA/nvidia-docker/issues/1631
    apt-key del 7fa2af80
    apt-key del 3bf863cc
    apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/3bf863cc.pub
    apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub

    apt-get update
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends python3-opencv
    apt-get clean
    rm -rf /var/lib/apt/lists/*

%test
    . /opt/conda/etc/profile.d/conda.sh
    conda activate vissl

    # Version checks
    which conda
    conda --version
    which python
    python --version

    # Check correct installation
    python -c 'import torch, apex, vissl, cv2'

%runscript
    echo "[$NOW] Running VISSL"
    echo "Arguments: $*"
    conda activate vissl
    exec "$@"

%labels
    Author Fabian Emmerich
    Version v1.6.0-cu10.2-py3.8

%help
    Provides the VISSL library and all required dependencies.
    The git repository is located at `/opt/vissl`.
